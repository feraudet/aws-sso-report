# Configuration pour git-cliff (générateur de changelog)
[changelog]
# template pour le changelog
header = """
# Changelog

Toutes les modifications notables de ce projet seront documentées dans ce fichier.

Le format est basé sur [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
et ce projet adhère au [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""
# template pour chaque release
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# template pour chaque commit
trim = true
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse les commits selon conventional commits
conventional_commits = true
# filtre les commits de merge
filter_unconventional = true
# split les commits par lignes
split_commits = false
# commit parsers
commit_parsers = [
    { message = "^feat", group = "🚀 Features" },
    { message = "^fix", group = "🐛 Bug Fixes" },
    { message = "^doc", group = "📚 Documentation" },
    { message = "^perf", group = "⚡ Performance" },
    { message = "^refactor", group = "♻️ Refactor" },
    { message = "^style", group = "🎨 Styling" },
    { message = "^test", group = "🧪 Testing" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps\\)", skip = true },
    { message = "^chore\\(pr\\)", skip = true },
    { message = "^chore\\(pull\\)", skip = true },
    { message = "^chore|^ci", group = "⚙️ Miscellaneous Tasks" },
    { body = ".*security", group = "🔒 Security" },
    { message = "^revert", group = "◀️ Revert" },
]
# protège les commits de breaking changes
protect_breaking_commits = false
# filtre les commits par chemin
filter_commits = false
# tag pattern
tag_pattern = "v[0-9].*"
# ignore les tags qui ne matchent pas le pattern
skip_tags = "v0.1.0-beta.1"
# ignore les commits
ignore_tags = ""
# trie les tags
topo_order = false
# sort les commits
sort_commits = "oldest"
